{"version":3,"file":"static/js/249.4dcd75ad.chunk.js","mappings":"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","sources":["Components/InputField/index.js","Constants/serverUrl.js","Components/TextareaField/index.js","Pages/Contact/index.js","hooks/useRequest.js"],"sourcesContent":["import React from 'react';\r\nimport './inputField.css';\r\n\r\nconst InputField = ({ placeholder, valid=true, type='text', name, value='', onChange, children }) => {\r\n    return ( \r\n        <div className={`input-data input-data-input ${valid ? '' : 'invalid'}`}>\r\n            <input type={type} name={name} defaultValue={value} placeholder={placeholder} onChange={onChange} required />\r\n            {children}\r\n        </div>\r\n    );\r\n}   \r\n \r\nexport default InputField;","export const serverUrl = 'https://maufruits.up.railway.app/api'; // Moving from heroku to railway","import React from 'react';\r\nimport '../InputField/inputField.css';\r\n\r\nconst TextareaField = ({ placeholder, value='', onChange, name }) => {\r\n    return ( \r\n        <div className='input-data input-data-textarea'>\r\n            <textarea type={'text'} defaultValue={value} name={name} onChange={onChange} placeholder={placeholder} required />\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default TextareaField;","import InputField from \"../../Components/InputField\";\r\nimport TextareaField from \"../../Components/TextareaField\";\r\nimport Button from \"../../Components/Button\";\r\nimport { GrMail } from \"react-icons/gr\";\r\nimport { BsFillTelephoneFill } from \"react-icons/bs\";\r\nimport { ImLocation2 } from \"react-icons/im\";\r\nimport './contact.css';\r\nimport useRequest from \"../../hooks/useRequest\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { serverUrl } from \"../../Constants/serverUrl\";\r\n\r\nconst Contact = () => {\r\n    const user = useSelector(state => state.user);\r\n    const { loading, fetchData } = useRequest();\r\n    const [success, setSuccess] = useState({})\r\n\r\n    const [formData, setFormData] = useState({\r\n        fname: '',\r\n        othername: '',\r\n        email: user.registered ? user.auth.email : '',\r\n        subject: '',\r\n        message: ''\r\n    });\r\n\r\n    const contactFormHandler = e => {\r\n        e.preventDefault();\r\n        fetchData({\r\n            url: `${serverUrl}/contact/sendmail`,\r\n            method: 'POST',\r\n            headers: { 'content-type': 'application/json' },\r\n            body: formData\r\n        }, (response) => {\r\n            setSuccess(response);\r\n        })\r\n    };\r\n\r\n    const contactInputHandler = e => {\r\n        const { name, value } = e.target;\r\n        setFormData({ ...formData, [name]: value });\r\n    };\r\n\r\n    return ( \r\n        <main>\r\n            <div className='color-w center-text m-top-30'>\r\n                <h1>Get in touch</h1>\r\n                <p className='m-top-10'>If you have any questions or remarks, just write us a message.</p>\r\n            </div>\r\n            <div className='contactUs-container flex'>\r\n                <div className='contact-info'>\r\n                    <h2>Contact Information</h2>\r\n                    <p className='m-top-10'>Fill up the form and we will get back to you as soon as possible</p>\r\n\r\n                    <div className='contact-details'>\r\n                        <div className='each-contact-detail flex center-v m-top-30'>\r\n                            <BsFillTelephoneFill className='contactIcon'/> \r\n                            <div>\r\n                                <p>+2305938349</p>\r\n                                <p>+2309839982</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className='each-contact-detail flex center-v m-top-20'>\r\n                            <GrMail className='contactIcon' /> \r\n                            <p>maufruits@gmail.com</p>\r\n                        </div>\r\n                        <div className='each-contact-detail flex center-v m-top-20'>\r\n                            <ImLocation2 className='contactIcon' /> \r\n                            <p>maufruits@gmail.com</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n                <form onSubmit={contactFormHandler} className='contactUs-form'>\r\n                    {loading && <Loader />}\r\n                    <h2>Send us a message</h2>\r\n                    {success && <h3 className=\"green-text m-top-10\">{success.message}</h3>}\r\n                    <div className='name-field flex'>\r\n                        <InputField value={formData.fname} onChange={contactInputHandler} name='fname' placeholder={'First Name'} />\r\n                        <InputField value={formData.othername} onChange={contactInputHandler} name='othername' placeholder={'Other Names'} />\r\n                    </div>\r\n                    <InputField value={formData.email} onChange={contactInputHandler} name='email' placeholder={'Your email'} type={'email'} />\r\n                    <InputField value={formData.subject} onChange={contactInputHandler} name='subject' placeholder={'Subject'} />\r\n                    <TextareaField value={formData.message} onChange={contactInputHandler} name='message' placeholder={'Your message'} />\r\n                    <Button type='submit'>Send message</Button>\r\n                </form>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n \r\nexport default Contact;","import { useCallback, useState } from 'react';\r\n\r\nconst useRequest = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const fetchData = useCallback( async (config, dataFormatter) => {\r\n        setLoading(true);\r\n        setError(null);\r\n        try {\r\n            const response = await fetch(config.url, {\r\n                method: config.method ? config.method : 'GET',\r\n                headers: config.headers ? config.headers : {},\r\n                body: JSON.stringify(config.body)\r\n            });\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                setError({ \r\n                    ...data, \r\n                    statusCode: response.status\r\n                });\r\n                throw new Error('Request failed!');\r\n            }\r\n            dataFormatter(data);\r\n        } catch(err) {\r\n            setError(s => s || { \r\n                message: 'Something went wrong with our server. Please try again later', \r\n                statusCode: 500 \r\n            });\r\n        }\r\n        setLoading(false);\r\n    }, [] );\r\n\r\n    return { loading, setError, error, fetchData };\r\n}\r\n \r\nexport default useRequest;"],"names":["placeholder","valid","type","name","value","onChange","children","className","defaultValue","required","serverUrl","user","useSelector","state","useRequest","loading","fetchData","useState","success","setSuccess","fname","othername","email","registered","auth","subject","message","formData","setFormData","contactInputHandler","e","target","onSubmit","preventDefault","url","method","headers","body","response","Loader","InputField","Button","setLoading","error","setError","useCallback","config","dataFormatter","fetch","JSON","stringify","json","data","ok","statusCode","status","Error","s"],"sourceRoot":""}