{"version":3,"file":"static/js/513.b4102a15.chunk.js","mappings":"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","sources":["Components/ErrorMessage/index.js","Components/InputField/index.js","Constants/serverUrl.js","Pages/AuthPage/index.js","hooks/useRequest.js"],"sourcesContent":["import './errorDiv.css';\r\n\r\nconst ErrorDiv = (props) => {\r\n    return (\r\n        <div className='error-displayBox'>\r\n            <p className='center-text'>{props.msg}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ErrorDiv;","import React from 'react';\r\nimport './inputField.css';\r\n\r\nconst InputField = ({ placeholder, valid=true, type='text', name, value='', onChange, children }) => {\r\n    return ( \r\n        <div className={`input-data input-data-input ${valid ? '' : 'invalid'}`}>\r\n            <input type={type} name={name} defaultValue={value} placeholder={placeholder} onChange={onChange} required />\r\n            {children}\r\n        </div>\r\n    );\r\n}   \r\n \r\nexport default InputField;","export const serverUrl = 'https://maufruits-api.herokuapp.com/api';","import React, { useState } from 'react';\r\nimport { Link, Navigate, useLocation } from 'react-router-dom';\r\nimport { FcGoogle } from \"react-icons/fc\";\r\nimport InputField from '../../Components/InputField';\r\nimport Button from '../../Components/Button';\r\nimport useRequest from '../../hooks/useRequest';\r\nimport Loader from '../../Components/Loader';\r\nimport ErrorMessage from '../../Components/ErrorMessage';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './auth.css';\r\nimport { signIn } from '../../ReduxStore/slices/userSlice';\r\nimport { serverUrl } from '../../Constants/serverUrl';\r\n\r\nconst SignupForm = ({ error, userData, onChange }) => {\r\n    return (\r\n        <React.Fragment>\r\n            <h2>Create a new account</h2>\r\n            {error && <ErrorMessage msg={error.message} />}\r\n            <div className='name-field flex'>\r\n                <InputField placeholder={'First name'} name='fname' value={userData.fname} onChange={onChange} />\r\n                <InputField placeholder={'Other name'} name='othername' value={userData.othername} onChange={onChange} />\r\n            </div>\r\n            <InputField placeholder={'Email'} type='email' name='email' value={userData.email} onChange={onChange} />\r\n            <InputField placeholder={'Password'} type={'password'} name='password' value={userData.password} onChange={onChange} />\r\n            <InputField placeholder={'Confirm password'} type={'password'} name='cPassword' value={userData.cPassword} onChange={onChange} />\r\n\r\n            <Button className='m-top-20' type='submit' width={true}>Sign up</Button>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nconst SigninForm = ({ error, userData, onChange }) => {\r\n    return (\r\n        <React.Fragment>\r\n            <h2>Sign in to MauFruits</h2>\r\n            {error && <ErrorMessage msg={error.message} />}\r\n            <InputField placeholder='Email' type='email' name='email' value={userData.email} onChange={onChange} />\r\n            <InputField placeholder='Password' type='password' name='password' value={userData.password} onChange={onChange} />\r\n            <Button className='m-top-20' type='submit' width={true}>Login</Button>\r\n            <p className='pwd-txt'>Forgot password?</p>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nconst AuthPage = (props) => {\r\n    const dispatch = useDispatch();\r\n    const userRegistered = useSelector(state => state.user.registered);\r\n    const { loading, setError, error, fetchData } = useRequest();\r\n    const [userData, setUserData] = useState({});\r\n    const params = useLocation();\r\n\r\n    const redirectUrl = params.state ? params.state.redirectUrl : '/MauFruits';\r\n\r\n    const authHandler = (event) => {\r\n        event.preventDefault();\r\n        fetchData({\r\n            url: `${serverUrl}/user/auth/${event.target.name}`,\r\n            method: 'POST',\r\n            headers: { 'content-type': 'application/json' },\r\n            body: userData\r\n        }, (response) => {\r\n            if(response.accessToken) {\r\n                dispatch(signIn(response));\r\n            }\r\n        });\r\n    }\r\n\r\n    const userDataHandler = (event) => {\r\n        const { name, value } = event.target;\r\n        const data = userData;\r\n        data[name] = value;\r\n        setUserData(data);  \r\n    }\r\n\r\n    const setDefaultStates = () => {\r\n        setUserData({});\r\n        setError(null);\r\n    }\r\n\r\n    const authFormProps = { error, userData, onChange:userDataHandler }\r\n    return ( \r\n        <React.Fragment>\r\n            {userRegistered && <Navigate to={redirectUrl} replace /> }\r\n            <main className='main-auth'>\r\n                <form name={props.signup ? 'signup' : 'signin'} onSubmit={authHandler} className='ls-container'>\r\n                    {loading && <Loader />}\r\n                    { props.signup ? \r\n                    <SignupForm { ...authFormProps } /> : \r\n                    <SigninForm { ...authFormProps } /> }\r\n                    <div className='separator'>\r\n                        <hr />\r\n                        <p className='bold-text'>or</p>\r\n                    </div>\r\n\r\n                    <button className='btn-light googleBtn flex center-v center-h'><FcGoogle /> Continue with google</button>\r\n\r\n                    { props.signup ? \r\n                    <p className='center-text'>Already have an account? <Link to='/MauFruits/login'><span onClick={setDefaultStates} className='pwd-txt'>SIGN IN</span></Link></p> :\r\n                    <p className='center-text'>Need an account? <Link to='/MauFruits/signup'><span onClick={setDefaultStates} className='pwd-txt'>SIGN UP</span></Link></p> }\r\n                </form>\r\n            </main>\r\n        </React.Fragment>\r\n    );\r\n}\r\n \r\nexport default AuthPage;\r\n\r\n\r\n","import { useCallback, useState } from 'react';\r\n\r\nconst useRequest = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const fetchData = useCallback( async (config, dataFormatter) => {\r\n        setLoading(true);\r\n        setError(null);\r\n        try {\r\n            const response = await fetch(config.url, {\r\n                method: config.method ? config.method : 'GET',\r\n                headers: config.headers ? config.headers : {},\r\n                body: JSON.stringify(config.body)\r\n            });\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                setError({ \r\n                    ...data, \r\n                    statusCode: response.status\r\n                });\r\n                throw new Error('Request failed!');\r\n            }\r\n            dataFormatter(data);\r\n        } catch(err) {\r\n            setError(s => s || { \r\n                message: 'Something went wrong with our server. Please try again later', \r\n                statusCode: 500 \r\n            });\r\n        }\r\n        setLoading(false);\r\n    }, [] );\r\n\r\n    return { loading, setError, error, fetchData };\r\n}\r\n \r\nexport default useRequest;"],"names":["props","className","msg","placeholder","valid","type","name","value","onChange","children","defaultValue","required","serverUrl","SignupForm","error","userData","ErrorMessage","message","InputField","fname","othername","email","password","cPassword","Button","width","SigninForm","dispatch","useDispatch","userRegistered","useSelector","state","user","registered","useRequest","loading","setError","fetchData","useState","setUserData","params","useLocation","redirectUrl","setDefaultStates","authFormProps","event","target","data","to","replace","signup","onSubmit","preventDefault","url","method","headers","body","response","accessToken","signIn","Loader","onClick","setLoading","useCallback","config","dataFormatter","fetch","JSON","stringify","json","ok","statusCode","status","Error","s"],"sourceRoot":""}